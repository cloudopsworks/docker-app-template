##
# (c) 2024 - Cloud Ops Works LLC - https://cloudops.works/
#            On GitHub: https://github.com/cloudopsworks
#            Distributed Under Apache v2.0 License
#
name: Scan Code SAST/DAST/SCA
on:
  workflow_call:
    inputs:
      deployment_name:
        description: 'Deployment Name'
        required: true
        type: string
      bot_user:
        description: 'Bot User'
        required: true
        type: string
      sonarqube_url:
        description: 'SonarQube URL'
        required: true
        type: string
      dtrack_url:
        description: 'Dependency Track URL'
        required: true
        type: string
      default_runner_set:
        description: 'Default Runner Set'
        required: true
        type: string
      environment:
        description: 'Environment'
        required: true
        type: string
      is_preview:
        description: 'Is Preview Environment'
        required: false
        type: boolean
        default: false

    secrets:
      token:
        description: 'GitHub Token'
        required: true
      semgrep_token:
        description: 'Semgrep Token'
        required: true
      sonarqube_token:
        description: 'SonarQube Token'
        required: true
      snyk_token:
        description: 'Snyk Token'
        required: true
      dtrack_token:
        description: 'Dependency Track Token'
        required: true


concurrency: scan-${{ github.repository }}-${{ github.ref }}

permissions:
  contents: read
  packages: write
  statuses: write
  pull-requests: write
  issues: write
  checks: write

jobs:
  preload:
    name: Preload Configuration
    runs-on: ubuntu-latest
    outputs:
      sonarqube_enabled: ${{ steps.config.outputs.sonarqube_enabled }}
      dtrack_enabled: ${{ steps.config.outputs.dtrack_enabled }}
      dtrack_project_type: ${{ steps.config.outputs.dtrack_project_type }}
      snyk_enabled: ${{ steps.config.outputs.snyk_enabled }}
      semgrep_enabled: ${{ steps.config.outputs.semgrep_enabled }}
      apis_enabled: ${{ steps.config.outputs.apis_enabled }}
      project_key: ${{ steps.config.outputs.project_key }}
      runner_set: ${{ steps.config.outputs.runner_set != '' && steps.config.outputs.runner_set || inputs.default_runner_set  }}
      fail_on_quality_gate: ${{ steps.config.outputs.fail_on_quality_gate }}
    steps:
      - name: Checkout w/Blueprint
        uses: cloudopsworks/blueprints/cd/checkout@v5
        with:
          blueprint_ref: 'v5'

      - name: Pipeline Configuration
        id: config
        uses: ./bp/ci/scan/config

  scan-semgrep:
    name: Scan Code with semgrep
    needs:
      - preload
    runs-on: ubuntu-latest
    container:
      image: semgrep/semgrep
    env:
      SEMGREP_APP_TOKEN: ${{ secrets.SEMGREP_TOKEN }}
    steps:
      - name: Checkout w/Blueprint
        uses: cloudopsworks/blueprints/cd/checkout@v5
        id: co
        with:
          blueprint_ref: 'v5'

      - name: Semgrep Scan
        if: ${{ needs.preload.outputs.semgrep_enabled == 'true' }}
        uses: ./bp/ci/java/scan/semgrep
        continue-on-error: true
        with:
          source_path: ${{ steps.co.outputs.source_path }}
          semgrep_token: ${{ secrets.semgrep_token }}
          bot_user: ${{ inputs.bot_user }}
          token: ${{ secrets.token }}


  scan-others:
    name: Scan Containers
    needs:
      - preload
    runs-on: ${{ needs.preload.outputs.runner_set }}
    steps:
      - name: Checkout w/Blueprint
        uses: cloudopsworks/blueprints/cd/checkout@v5
        id: co
        with:
          blueprint_ref: 'v5'

      - name: Trivy Scan
        if: ${{ needs.preload.outputs.trivy_enabled == 'true' }}
        uses: ./bp/ci/docker/scan/trivy
        continue-on-error: true
        with:
          source_path: ${{ steps.co.outputs.source_path }}
          snyk_token: ${{ secrets.snyk_token }}
          bot_user: ${{ inputs.bot_user }}
          token: ${{ secrets.token }}

      - name: Upload Artifacts
        uses: ./bp/ci/docker/test/artifacts
        with:
          bot_user: ${{ inputs.bot_user }}
          token: ${{ secrets.token }}

