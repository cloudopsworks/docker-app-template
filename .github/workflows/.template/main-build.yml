##
# (c) 2023 - Cloud Ops Works LLC - https://cloudops.works/
#            On GitHub: https://github.com/cloudopsworks
#            Distributed Under Apache v2.0 License
#
name: Release Build
on:
  # Run only on branches PUSH except when charts are modified
  push:
    tags:
      - 'v[0-9]+.[0-9]+.[0-9]+'
      - 'v[0-9]+.[0-9]+.[0-9]+**'
    branches:
      - develop
      - support/**
      - release/**
    paths-ignore:
      - '.github/**'
      - '!.github/vars/**'
      - '!.github/values/**'
  workflow_dispatch:

concurrency: build-${{ github.repository }}-${{ github.ref }}

# Permission Settings for the entire RUN
permissions:
  actions: write
  contents: write
  issues: write
  packages: write
  statuses: write

jobs:
  data:
    uses: {{REPO_OWNER}}/base-app-template/.github/workflows/cd-data.yml@v3
    secrets:
      token: ${{ secrets.BOT_TOKEN_SCOPED }}

  build:
    needs:
      - data
    uses: ./.github/workflows/code-build.yml
    if: ${{ needs.data.outputs.hasQualifier != 'true' }}
    with:
      buildEnvironment: ${{ needs.data.outputs.deploymentName }}
      environment: ${{ needs.data.outputs.environment }}
      targetName: ${{ needs.data.outputs.targetName }}
      isRelease: ${{ startsWith(github.ref,'refs/tags/') }}
      DOCKER_REGISTRY_ADDRESS: ${{ needs.data.outputs.dockerRegistry != '' && needs.data.outputs.dockerRegistry || vars.DOCKER_REGISTRY_ADDRESS }}
      HELM_REGISTRY_ADDRESS: ${{ needs.data.outputs.helmRegistry != '' && needs.data.outputs.helmRegistry || vars.HELM_REGISTRY_ADDRESS }}
      BOT_USER: ${{ vars.BOT_USER }}
      BOT_EMAIL: ${{ vars.BOT_EMAIL }}
      TARGET_CLOUD: ${{ needs.data.outputs.cloud }}
      AWS_REGION: ${{ needs.data.outputs.awsRegion != '' && needs.data.outputs.awsRegion || vars.BUILD_AWS_REGION }}
      AWS_STS_ROLE_ARN: ${{ needs.data.outputs.awsStsRoleArn != '' && needs.data.outputs.awsStsRoleArn || vars.BUILD_AWS_STS_ROLE_ARN }}
    secrets:
      BOT_TOKEN: ${{ secrets.BOT_TOKEN }}
      AWS_ACCESS_KEY_ID: ${{ secrets.BUILD_AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.BUILD_AWS_SECRET_ACCESS_KEY }}
      AZURE_SERVICE_ID: ${{ secrets.AZURE_SERVICE_ID }}
      AZURE_SERVICE_SECRET: ${{ secrets.AZURE_SERVICE_SECRET }}

  release:
    needs:
      - data
      - build
    uses: {{REPO_OWNER}}/base-app-template/.github/workflows/create-release.yml@v3
    if: ${{ needs.data.outputs.hasQualifier != 'true' && startsWith(github.ref,'refs/tags/') }}
    with:
      ref_name: v${{ needs.build.outputs.semver }}
      release-tag: v${{ needs.build.outputs.semver }}
      pre-release: ${{ needs.data.outputs.isPreRelease == 'true' }}
    secrets:
      token: ${{ secrets.BOT_TOKEN }}
