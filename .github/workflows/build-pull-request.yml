##
# (c) 2023 - Cloud Ops Works LLC - https://cloudops.works/
#            On GitHub: https://github.com/cloudopsworks
#            Distributed Under Apache v2.0 License
#
name: Build Pull Request
on:
  pull_request:
    types:
      - opened
      - synchronize
      - edited
    branches:
      - hotfix/**
      - feature/**
      - master
      - release/**
      - support/**
      - develop


concurrency: build-pull-${{ github.repository }}-${{ github.ref }}

permissions:
  contents: read
  packages: write
  statuses: write
  pull-requests: write
  issues: write
  checks: write

jobs:
  project_data:
    runs-on: ubuntu-latest
    outputs:
      project_name: ${{ steps.getowner.outputs.repo_name }}
    steps:
      # Get the owner repo
      - name: Get owner
        id: getowner
        run: |
          repo_owner=`echo "$GITHUB_REPOSITORY" | cut -f 1 -d "/"`
          repo_name=`echo "$GITHUB_REPOSITORY" | cut -f 2 -d "/"`
          echo "owner=$repo_owner" >> $GITHUB_OUTPUT
          echo "repo_name=$repo_name" >> $GITHUB_OUTPUT

  target_cloud:
    runs-on: ubuntu-latest
    outputs:
      is_azure: ${{ steps.provider.outputs.is_azure }}
      is_aws: ${{ steps.provider.outputs.is_aws }}
    steps:
      - name: extract cloud provider
        id: provider
        env:
          TARGET: ${{ vars.TARGET_CLOUD }}
        run: |
          is_azure=0
          is_aws=0
          if [[ "$TARGET" == "AWS" ]] ; then
            is_aws=1
          fi
          if [[ "$TARGET" == "AZ" ]] ; then
            is_azure=1
          fi
          echo "is_azure=$is_azure" >>$GITHUB_OUTPUT
          echo "is_aws=$is_aws" >>$GITHUB_OUTPUT

  build:
    if: ${{ ! startsWith(github.head_ref, 'release/') && ! startsWith(github.head_ref,'support/') && ! startsWith(github.head_ref,'master')}}
    uses: ./.github/workflows/code-build.yml
    with:
      isRelease: false
      DOCKER_REGISTRY_ADDRESS: ${{ vars.DOCKER_REGISTRY_ADDRESS }}
      HELM_REGISTRY_ADDRESS: ${{ vars.DOCKER_REGISTRY_ADDRESS }}
      BOT_USER: ${{ vars.BOT_USER }}
      BOT_EMAIL: ${{ vars.BOT_EMAIL }}
      TARGET_CLOUD: ${{ vars.TARGET_CLOUD }}
      AWS_REGION: ${{ vars.BUILD_AWS_REGION }}
    secrets:
      BOT_TOKEN: ${{ secrets.BOT_TOKEN }}
      AWS_ACCESS_KEY_ID: ${{ secrets.BUILD_AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.BUILD_AWS_SECRET_ACCESS_KEY }}
      AZURE_SERVICE_ID: ${{ secrets.AZURE_SERVICE_ID }}
      AZURE_SERVICE_SECRET: ${{ secrets.AZURE_SERVICE_SECRET }}

