organization_name: "ORG_NAME"
organization_unit: "ORG_UNIT"
environment_name: "ENV_NAME"
repository_owner: "REPO_OWNER" # Required
#
## Default image version is "node:18-alpine" and default run command is npm run start
## modify docker_image and docker_inline parameters to match the proper configuration needed
#docker_image: docker/image:version-xxx
#
# Dockerfile Inline content that will be merged into the Dockerfile
#docker_inline: |
#  # Dockerfile content here
#  # Example:
#  # FROM node:14-alpine as test
#  # WORKDIR /app
#  # COPY package*.json ./
#  # FROM customized # customized stage is required to get back to the original stage to copy files
#  # COPY --from test ./mydir ./my dest
#
# Docker Arguments that will be passed to Docker Build Process
#docker_args: |
#  ARG1=value1
#  ARG2=value2
#  ARG3=value3
#
# Custom command that will be placed as startup script in dockerfile
#custom_run_command: npm run start
#
# Custom User Group Command, this command can be uncommented in some cases to cover the proper
# User creation on images like based on Busybox or Redhat UBI-8/9 or Fedora, important double scape of \
#custom_usergroup: |
#  groupadd --gid $GROUP_ID --system $GROUP_NAME \\
#    && useradd --uid $USER_ID --system --gid $GROUP_ID --home /app/webapp $USER_NAME
#
## CD pipeline configuration uncomment and configure accordingly to enable
# Target Cloud
cloud: aws | azure | gcp
# Cloud deployment type depends on the target cloud
cloud_type: eks | aks | gke | kubernetes
# Indicate the Runner that will be used for the deployment - usually will be a hosted runner
# runner_set: "arc-runner-set"
